package com.jmev.cn.service.basic;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.jmev.cn.dao.basic.EvTboxMapper;
import com.jmev.cn.dto.basic.QueryEvTboxDto;
import com.jmev.cn.entity.basic.EvTbox;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.math.BigInteger;
import java.util.List;

@Service("evTboxService")
public class EvTboxService
{
    @Autowired
    private EvTboxMapper evTboxMapper;

    // 分页查询
    PageInfo<EvTbox> queryEvTbox(QueryEvTboxDto dto)
    {
        PageHelper.startPage(dto.getPageIndex(), dto.getPageSize());
        List<EvTbox> evTboxes = evTboxMapper.queryEvTbox(dto);
        return new PageInfo<>(evTboxes);
    }

    boolean checkEvTboxUnique(EvTbox evTbox)
    {
        if (StringUtils.isBlank(evTbox.getTboxNum()))
        {
            return true;
        }
        if (StringUtils.isBlank(evTbox.getIccidNum()))
        {
            return true;
        }
        BigInteger count = evTboxMapper.findByTboxNumOrIccidNum(evTbox);
        return count.intValue() > 0;
    }

    @Transactional(readOnly = false)
    public void addEvTbox(EvTbox evTbox)
    {
        evTboxMapper.insertSelective(evTbox);
    }

    void deleteEvTbox(Long id)
    {
        evTboxMapper.deleteByPrimaryKey(id);
    }

    List<EvTbox> exprotEvTbox(QueryEvTboxDto queryEvTboxDto)
    {
        return evTboxMapper.queryEvTbox(queryEvTboxDto);
    }

    void updateEvTbox(EvTbox evTbox)
    {
        evTboxMapper.updateByPrimaryKeySelective(evTbox);
    }
}
