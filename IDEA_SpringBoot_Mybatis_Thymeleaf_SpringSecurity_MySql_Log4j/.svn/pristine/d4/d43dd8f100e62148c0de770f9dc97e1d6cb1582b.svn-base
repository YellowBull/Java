<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://http://www.springframework.org/schema/util" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context-3.0.xsd   
      http://www.springframework.org/schema/util 
      http://www.springframework.org/schema/util/spring-util-3.0.xsd 
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd" default-autowire="byName">

	<!-- 开启注解 -->
	<mvc:annotation-driven conversion-service="formattingConversionServiceFactoryBean" />

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.jmev.cn">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 静态资源访问 (表示不对静态资源如CSS、JS、HTML等进行拦截) -->
	<mvc:default-servlet-handler />
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/static/**" location="/static/"/>
	<mvc:resources mapping="/templates/**" location="/templates/"/>

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>  
            	<value>application/json;charset=UTF-8</value>  
            	<value>text/html;charset=UTF-8</value>  
            	<value>text/json;charset=UTF-8</value>      
        	</list> 
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 数据类型转换  -->
	<bean id="formattingConversionServiceFactoryBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.jmev.cn.util.FormString2DateConverter" />
            </list>
        </property>
    </bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".html" />
	</bean>
	<!-- 请求线程号生成器 -->
	<bean name="risSessionIdGenerator" class="com.hdrs.common.id.SessionIdGenerator">
		<property name="prefix" value="RIST" />
	</bean>
	<!--===================================================================== -->
	<!-- 配置拦截器 -->
	<!--===================================================================== -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.hdrs.web.filter.RequestInterceptor">
				<property name="sessionIdGenerator" ref="risSessionIdGenerator"/>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	<bean id="errorController" class="com.jmev.cn.controller.base.ErrorController" />
	<bean id="defaulturlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="order" value="2147483647" /><!-- 此处的order很重要，要低于 mvc:resources的默认值2147483646-->
		<property name="mappings">
			<props>
				<prop key="/*/**">errorController</prop>
			</props>
		</property>
	</bean>
	
	<!-- 上传文件组件 -->
	<bean name="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <!-- 设置上传的编码格式 -->
	    <property name="defaultEncoding" value="UTF-8"></property>  
	</bean>
</beans>  